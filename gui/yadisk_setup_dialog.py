"""–î–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–∞ –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å —Ç–æ–∫–µ–Ω–æ–º"""

from __future__ import annotations

import customtkinter as ctk
import tkinter.messagebox as messagebox
import webbrowser
from utils.user_prefs import load_prefs, save_prefs


class YaDiskSetupDialog(ctk.CTkToplevel):
    """–î–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–∞"""
    
    def __init__(self, parent):
        super().__init__(parent)
        
        self.title("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–∞")
        self.geometry("500x400")
        self.resizable(False, False)
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –æ–∫–Ω–æ
        self.transient(parent)
        self.grab_set()
        
        if parent:
            parent.update_idletasks()
            x = parent.winfo_x() + (parent.winfo_width() // 2) - 250
            y = parent.winfo_y() + (parent.winfo_height() // 2) - 200
            self.geometry(f"500x400+{x}+{y}")
        
        self.result = None
        self._setup_ui()
        
    def _setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—Ä–µ–π–º
        main_frame = ctk.CTkFrame(self)
        main_frame.pack(fill="both", expand=True, padx=20, pady=20)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = ctk.CTkLabel(
            main_frame,
            text="‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–æ–º",
            font=ctk.CTkFont(size=18, weight="bold"),
            text_color="#dc2626"
        )
        title_label.pack(pady=(10, 20))
        
        # –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
        problem_text = """–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫—É –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö.

–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
‚Ä¢ –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –∏—Å—Ç–µ–∫
‚Ä¢ –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–∏—Å–æ–º –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–∞

–ß—Ç–æ –¥–µ–ª–∞—Ç—å:"""
        
        problem_label = ctk.CTkLabel(
            main_frame,
            text=problem_text,
            font=ctk.CTkFont(size=12),
            justify="left"
        )
        problem_label.pack(pady=(0, 20), anchor="w")
        
        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        buttons_frame = ctk.CTkFrame(main_frame, fg_color="transparent")
        buttons_frame.pack(fill="x", pady=(0, 20))
        
        # –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω
        get_token_btn = ctk.CTkButton(
            buttons_frame,
            text="üîë –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω",
            command=self._get_new_token,
            width=200,
            height=40
        )
        get_token_btn.pack(pady=5)
        
        # –í–≤–µ—Å—Ç–∏ —Ç–æ–∫–µ–Ω –≤—Ä—É—á–Ω—É—é
        manual_token_btn = ctk.CTkButton(
            buttons_frame,
            text="üìù –í–≤–µ—Å—Ç–∏ —Ç–æ–∫–µ–Ω –≤—Ä—É—á–Ω—É—é",
            command=self._enter_token_manually,
            width=200,
            height=40,
            fg_color="gray",
            hover_color="darkgray"
        )
        manual_token_btn.pack(pady=5)
        
        # –†–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        offline_btn = ctk.CTkButton(
            buttons_frame,
            text="üíª –†–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏",
            command=self._work_offline,
            width=200,
            height=40,
            fg_color="#7c3aed",
            hover_color="#5b21b6"
        )
        offline_btn.pack(pady=5)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–Ω–∏–∑—É
        info_label = ctk.CTkLabel(
            main_frame,
            text="–ü—Ä–∏ —Ä–∞–±–æ—Ç–µ –±–µ–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ.",
            font=ctk.CTkFont(size=10),
            text_color="gray"
        )
        info_label.pack(pady=(10, 0))
        
    def _get_new_token(self):
        """–û—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞"""
        try:
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
            webbrowser.open("https://oauth.yandex.ru/authorize?response_type=token&client_id=23cabbbdc6cd418abb4b39c32c41195d")
            
            messagebox.showinfo(
                "–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞",
                """1. –í –æ—Ç–∫—Ä—ã–≤—à–µ–º—Å—è –±—Ä–∞—É–∑–µ—Ä–µ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –Ø–Ω–¥–µ–∫—Å
2. –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫—É
3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω –∏–∑ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ (–ø–æ—Å–ª–µ access_token=)
4. –í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É –∏ –Ω–∞–∂–º–∏—Ç–µ "–í–≤–µ—Å—Ç–∏ —Ç–æ–∫–µ–Ω –≤—Ä—É—á–Ω—É—é" """,
                parent=self
            )
            
        except Exception as exc:
            messagebox.showerror(
                "–û—à–∏–±–∫–∞",
                f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä: {exc}\n\n–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é –ø–æ —Å—Å—ã–ª–∫–µ:\nhttps://oauth.yandex.ru/authorize?response_type=token&client_id=23cabbbdc6cd418abb4b39c32c41195d",
                parent=self
            )
    
    def _enter_token_manually(self):
        """–í–≤–æ–¥ —Ç–æ–∫–µ–Ω–∞ –≤—Ä—É—á–Ω—É—é"""
        from tkinter import simpledialog
        
        token = simpledialog.askstring(
            "–¢–æ–∫–µ–Ω –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–∞",
            "–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –∫ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫—É:",
            parent=self
        )
        
        if token and token.strip():
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
            try:
                prefs = load_prefs()
                prefs.yandex_oauth_token = token.strip()
                save_prefs(prefs)
                
                messagebox.showinfo(
                    "–¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω",
                    "–¢–æ–∫–µ–Ω –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.\n–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–ø—Ä–æ–±—É–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—É—Å–∫–µ.",
                    parent=self
                )
                
                self.result = "token_saved"
                self.destroy()
                
            except Exception as exc:
                messagebox.showerror(
                    "–û—à–∏–±–∫–∞",
                    f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω: {exc}",
                    parent=self
                )
    
    def _work_offline(self):
        """–†–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"""
        self.result = "offline"
        self.destroy()
