#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ PostgreSQL –≤ Docker
–ê–≤—Ç–æ—Ä: AI Assistant
"""

import subprocess
import time
import logging
import psycopg2
from pathlib import Path

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def run_docker_postgresql():
    """–ó–∞–ø—É—Å–∫ PostgreSQL –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"""
    
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ PostgreSQL –≤ Docker...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        result = subprocess.run(
            ["docker", "ps", "-q", "-f", "name=postgres-sdelka"],
            capture_output=True,
            text=True
        )
        
        if result.stdout.strip():
            logger.info("‚úÖ PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω")
            return True
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        cmd = [
            "docker", "run", "-d",
            "--name", "postgres-sdelka",
            "-e", "POSTGRES_DB=sdelka_v4",
            "-e", "POSTGRES_USER=sdelka_user", 
            "-e", "POSTGRES_PASSWORD=sdelka_password",
            "-p", "5432:5432",
            "postgres:15"
        ]
        
        logger.info(f"–í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É: {' '.join(cmd)}")
        result = subprocess.run(cmd, capture_output=True, text=True)
        
        if result.returncode == 0:
            logger.info("‚úÖ PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            
            # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            logger.info("‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ PostgreSQL...")
            time.sleep(10)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            if test_postgresql_connection():
                logger.info("‚úÖ PostgreSQL –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
                return True
            else:
                logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ PostgreSQL")
                return False
        else:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: {result.stderr}")
            return False
            
    except FileNotFoundError:
        logger.error("‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop")
        return False
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_postgresql_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL"""
    try:
        conn = psycopg2.connect(
            host="localhost",
            port=5432,
            database="sdelka_v4",
            user="sdelka_user",
            password="sdelka_password"
        )
        conn.close()
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def stop_docker_postgresql():
    """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"""
    try:
        subprocess.run(["docker", "stop", "postgres-sdelka"], capture_output=True)
        subprocess.run(["docker", "rm", "postgres-sdelka"], capture_output=True)
        logger.info("‚úÖ PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("=== –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ PostgreSQL –≤ Docker ===")
    
    import sys
    if len(sys.argv) > 1 and sys.argv[1] == "stop":
        stop_docker_postgresql()
        return
    
    success = run_docker_postgresql()
    
    if success:
        logger.info("üéâ PostgreSQL –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        logger.info("üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:")
        logger.info("   Host: localhost")
        logger.info("   Port: 5432") 
        logger.info("   Database: sdelka_v4")
        logger.info("   User: sdelka_user")
        logger.info("   Password: sdelka_password")
        logger.info("")
        logger.info("üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: python docker_postgresql.py stop")
    else:
        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å PostgreSQL")

if __name__ == "__main__":
    main()
